# Copyright (c) 2024 Habana Labs, Ltd.
#
# SPDX-License-Identifier: Apache-2.0
#
# HabanaLabs Dockerfile base installer layer for RedHat 9.4
# Modified by Christian Heimes for Red Hat and InstructLab
#
# NOTE: The image requires a registry.redhat.io login and a subscribed host
# system. On Fedora, subscription-manager-plugin-container package is needed
# to pass subscriptions to the container.
#
FROM registry.redhat.io/rhel9/s2i-base:1-519
ARG ARTIFACTORY_URL
ARG VERSION
ARG REVISION

LABEL vendor="Habanalabs Ltd."
LABEL release="${VERSION}-${REVISION}"

COPY LICENSE /licenses/

# habanalabs' GPG key uses SHA-1 signature
RUN update-crypto-policies --set DEFAULT:SHA1

RUN echo "[habanalabs]" > /etc/yum.repos.d/habanalabs.repo && \
    echo "name=Habana RH9 Linux repo" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "baseurl=https://${ARTIFACTORY_URL}/artifactory/rhel/9/9.2" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "gpgkey=https://${ARTIFACTORY_URL}/artifactory/rhel/9/9.2/repodata/repomd.xml.key" >> /etc/yum.repos.d/habanalabs.repo && \
    echo 'gpgcheck=1' >> /etc/yum.repos.d/habanalabs.repo

# There is no need to store pip installation files inside docker image
ENV PIP_NO_CACHE_DIR=on
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

ENV PYTHON_VERSION=3.10
RUN dnf -y copr enable cheimes/gaudi && \
    dnf -y install python3.10 python3.10-devel && \
    python3.10 -m ensurepip --altinstall && \
    python3.10 -m pip install --upgrade pip setuptools wheel && \
    dnf clean all && rm -rf /var/cache/yum

RUN dnf install -y \
    clang \
    cmake3 \
    cpp \
    gcc \
    gcc-c++ \
    glibc \
    glibc-headers \
    glibc-devel \
    jemalloc \
    libarchive \
    libksba \
    unzip \
    llvm \
    lsof \
    openssh-clients \
    openssl \
    openssl-devel \
    libjpeg-devel \
    openssh-server \
    wget \
    git \
    libffi-devel \
    bzip2-devel \
    zlib-devel \
    mesa-libGL \
    iproute \
    python3-dnf-plugin-versionlock && \
    # update pkgs (except OS version) for resolving potentials CVEs
    dnf versionlock add redhat-release* && \
    dnf update -y && \
    dnf clean all && rm -rf /var/cache/yum

ENV MPI_ROOT=/usr/lib64/openmpi
ENV MPICC=${MPI_ROOT}/bin/mpicc
ENV RDMAV_FORK_SAFE=1
ENV FI_EFA_USE_DEVICE_RDMA=1

# habanalabs packages from Habana repo
# libfabric and hccl_ofi_wrapper from COPR
RUN dnf install -y habanalabs-rdma-core-"$VERSION"-"$REVISION".el9 \
        habanalabs-thunk-"$VERSION"-"$REVISION".el9 \
        habanalabs-firmware-tools-"$VERSION"-"$REVISION".el9 \
        habanalabs-graph-"$VERSION"-"$REVISION".el9 \
        'libfabric >= 1.20' \
        libfabric-devel \
        hccl_ofi_wrapper \
        openmpi \
        openmpi-devel && \
    dnf clean all && rm -rf /var/cache/yum

RUN rpm -V habanalabs-rdma-core && rpm -V habanalabs-thunk && rpm -V habanalabs-firmware-tools && rpm -V habanalabs-graph

# not needed for InstructLab
# RUN python3.10 -m pip install habana_media_loader=="${VERSION}"."${REVISION}"

# SSH configuration necessary to support mpi-operator v2
RUN mkdir -p /var/run/sshd && \
    sed -i 's/[ #]\(.*StrictHostKeyChecking \).*/ \1no/g' /etc/ssh/ssh_config && \
    sed -i 's/#\(ForwardAgent \).*/\1yes/g' /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    sed -i 's/#\(StrictModes \).*/\1no/g' /etc/ssh/sshd_config && \
    ssh-keygen -A && \
    mkdir -p /var/run/sshd && echo "/usr/sbin/sshd -p 3022" | tee -a ~/.bashrc

ENV GC_KERNEL_PATH=/usr/lib/habanalabs/libtpc_kernels.so
ENV HABANA_LOGS=/var/log/habana_logs/
ENV HABANA_SCAL_BIN_PATH=/opt/habanalabs/engines_fw
ENV HABANA_PLUGINS_LIB_PATH=/opt/habanalabs/habana_plugins

ENV PS1="[\u@\h \W]\$ "
CMD ["/bin/bash"]
